{
	"info": {
		"_postman_id": "8a2eb3a3-582c-4bb9-a6b3-fba2d56874a4",
		"name": "Story Spoiler",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28698796",
		"_collection_link": "https://universal-escape-840963.postman.co/workspace/982aeeab-d690-4bfa-9381-ac8ae37834ce/collection/28698796-8a2eb3a3-582c-4bb9-a6b3-fba2d56874a4?action=share&source=collection_link&creator=28698796"
	},
	"item": [
		{
			"name": "Login and Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json()\r",
							"\r",
							"pm.collectionVariables.set(\"accessToken\", responseData.accessToken)\r",
							"\r",
							"pm.test(\"Response body has username, password and accessToken\", function(){\r",
							"    pm.expect(responseData.username).not.to.be.empty\r",
							"    pm.expect(responseData.password).not.to.be.empty\r",
							"    pm.expect(responseData.accessToken).not.to.be.empty\r",
							"\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"userName\": \"Romek\", \r\n\"password\": \"Romek123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Story Spoiler",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomNumber = Math.floor(Math.random()*1000)\r",
							"var randomTitle = \"title\" + randomNumber\r",
							"\r",
							"pm.collectionVariables.set(\"randomTitle\", randomTitle)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response contains 'Successfully created!' message\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Successfully created!\");",
							"});",
							"",
							"const responseJSON = pm.response.json();",
							"const storyId = responseJSON.storyId;",
							"pm.collectionVariables.set('storyId', storyId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"title\": \"{{randomTitle}}\",\r\n\"description\": \"Description for the Story Spoiler for {{randomTitle}}\",\r\n\"url\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Story/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Story",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search for the Created Story Spoiler by Title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Code is 200\", function () {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"const responseData = pm.response.text();",
							"",
							"pm.test(\"Response body is a non-empty array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;",
							"});",
							"",
							"pm.test(\"Response contains story with matching title\", function () {",
							"    const responseBody = pm.response.json();",
							"    const matchingTitle = pm.variables.get(\"randomTitle\");",
							"    pm.expect(responseBody.some(story => story.title === matchingTitle)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Story/Search?keyword={{randomTitle}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Story",
						"Search"
					],
					"query": [
						{
							"key": "keyword",
							"value": "{{randomTitle}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit the Created Story Spoiler",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Successfully edited\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Successfully edited\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"title\": \"{{editedTitle}}\",\r\n\"description\": \"Description of the Story Spoiler for editedTitle\",\r\n\"url\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Story/Edit/{{storyId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Story",
						"Edit",
						"{{storyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Story Spoiler",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"const responseText = pm.response.text()\r",
							"\r",
							"pm.test(\"Response message is 'Deleted successfully!'\", function(){\r",
							"    pm.expect(responseText).to.contain('Deleted successfully!')\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/Story/Delete/{{storyId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Story",
						"Delete",
						"{{storyId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://d5wfqm7y6yb3q.cloudfront.net",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "randomTitle",
			"value": ""
		},
		{
			"key": "storyId",
			"value": ""
		}
	]
}